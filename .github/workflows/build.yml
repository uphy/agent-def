# .github/workflows/build.yml
name: Build

# Trigger the workflow on push to main and all pull requests
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# Cancel in-progress runs for the same workflow and branch/PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.21.x] # Based on go.mod
        platform:
          - { os: "linux", arch: "amd64" }
          - { os: "linux", arch: "arm64" }
          - { os: "darwin", arch: "amd64" }
          - { os: "darwin", arch: "arm64" }
          - { os: "windows", arch: "amd64", ext: ".exe" }

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for version info

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          cache: true # Cache Go modules

      - name: Determine version
        id: version
        run: |
          VERSION=$(git describe --tags --always --dirty)
          COMMIT=$(git rev-parse --short HEAD)
          DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "COMMIT=$COMMIT" >> $GITHUB_OUTPUT
          echo "DATE=$DATE" >> $GITHUB_OUTPUT
          echo "Building version $VERSION (commit $COMMIT, built at $DATE)"

      - name: Build binary
        env:
          GOOS: ${{ matrix.platform.os }}
          GOARCH: ${{ matrix.platform.arch }}
          CGO_ENABLED: 0 # Disable CGO for fully static binaries
        run: |
          BINARY_NAME="agent-def-${{ matrix.platform.os }}-${{ matrix.platform.arch }}${{ matrix.platform.ext }}"
          go build -v -trimpath -ldflags="-s -w -X 'github.com/user/agent-def.Version=${{ steps.version.outputs.VERSION }}' -X 'github.com/user/agent-def.Commit=${{ steps.version.outputs.COMMIT }}' -X 'github.com/user/agent-def.BuildDate=${{ steps.version.outputs.DATE }}'" -o "$BINARY_NAME" ./cmd/agent-def
          if [ "${{ matrix.platform.os }}" = "windows" ]; then
            echo "Created Windows binary: $BINARY_NAME"
          else
            chmod +x "$BINARY_NAME"
            echo "Created ${{ matrix.platform.os }}-${{ matrix.platform.arch }} binary: $BINARY_NAME"
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: agent-def-${{ matrix.platform.os }}-${{ matrix.platform.arch }}
          path: agent-def-${{ matrix.platform.os }}-${{ matrix.platform.arch }}${{ matrix.platform.ext }}
          if-no-files-found: error
          retention-days: 7 # How long to keep artifacts
